{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dinus\\\\Desktop\\\\LibraryManagementSystem\\\\frontend\\\\library-frontend\\\\src\\\\components\\\\BookList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getBooks } from '../services/bookService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookList = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      try {\n        const response = await getBooks();\n        setBooks(response.data);\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      }\n    };\n    fetchBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [book.title, \" by \", book.author]\n      }, book.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(BookList, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useEffect","useState","getBooks","jsxDEV","_jsxDEV","BookList","_s","books","setBooks","fetchBooks","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","book","title","author","id","_c","$RefreshReg$"],"sources":["C:/Users/dinus/Desktop/LibraryManagementSystem/frontend/library-frontend/src/components/BookList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getBooks } from '../services/bookService';\r\n\r\nconst BookList: React.FC = () => {\r\n    const [books, setBooks] = useState<any[]>([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchBooks = async () => {\r\n            try {\r\n                const response = await getBooks();\r\n                setBooks(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching books:', error);\r\n            }\r\n        };\r\n        \r\n        fetchBooks();\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <h2>Book List</h2>\r\n            <ul>\r\n                {books.map((book) => (\r\n                    <li key={book.id}>{book.title} by {book.author}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAQ,EAAE,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAAC,CAAC;QACjCM,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDH,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBd,OAAA;MAAAU,QAAA,EACKP,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACZhB,OAAA;QAAAU,QAAA,GAAmBM,IAAI,CAACC,KAAK,EAAC,MAAI,EAACD,IAAI,CAACE,MAAM;MAAA,GAArCF,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACtD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACZ,EAAA,CA1BID,QAAkB;AAAAmB,EAAA,GAAlBnB,QAAkB;AA4BxB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}